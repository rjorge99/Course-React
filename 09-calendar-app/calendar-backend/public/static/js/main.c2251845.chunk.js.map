{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","auth/LoginScreen.js","ui/NavBar.js","helpers/calendar-mesages.js","calendar/CalendarEvent.js","actions/ui.js","calendar/CalendarModal.js","ui/AddNewFab.js","ui/DeleteEventFab.js","calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","event","start","moment","toDate","end","eventAddNew","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logOut","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","onClick","NavBar","useSelector","state","auth","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","modalOpen","ui","activeEvent","calendar","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onView","view","selectable","onSelectSlot","components","PrivateRoute","isAuth","children","to","PublicRoute","AppRouter","checking","path","element","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2251845.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\n    const url = `${baseURL}/${endpoint}`;\n\n    if (method === \"GET\") return fetch(url);\n    else {\n        return fetch(url, {\n            method,\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n    }\n};\n\nconst fetchConToken = (endpoint, data, method = \"GET\") => {\n    const token = localStorage.getItem(\"token\") || \"\";\n    const url = `${baseURL}/${endpoint}`;\n\n    if (method === \"GET\")\n        return fetch(url, {\n            method,\n            headers: {\n                \"x-token\": token\n            }\n        });\n    else {\n        return fetch(url, {\n            method,\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"x-token\": token\n            },\n            body: JSON.stringify(data)\n        });\n    }\n};\n\nexport { fetchSinToken, fetchConToken };\n","export const types = {\n    uiOpenModal: \"[ui] Open Modal\",\n    uiCloseModal: \"[ui] Close Modal\",\n\n    eventSetActive: \"[event] Set Active\",\n    eventLogout: \"[event] Logout event\",\n    eventStartAddNew: \"[event] Start add new\",\n    eventAddNew: \"[event] Add new\",\n    eventClearActiveEvent: \"[event] Clear active event\",\n    eventUpdated: \"[event] Event updated\",\n    eventDeleted: \"[event] Event deleted\",\n    eventLoaded: \"[event] Events loaded\",\n\n    authCheckingFinish: \"[auth] Finish checking login state\",\n    authStartLogin: \"[auth] Start login\",\n    authLogin: \"[auth] Login\",\n    authStartRegister: \"[auth] Start register\",\n    authStartTokenRenew: \"[auth] Strat token renew\",\n    authLogout: \"[auth] Logout\"\n};\n","import moment from \"moment\";\n\nexport const prepareEvents = (events = []) => {\n    return events.map((event) => ({\n        ...event,\n        start: moment(event.start).toDate(),\n        end: moment(event.end).toDate()\n    }));\n};\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken(\"events\", event, \"POST\");\n            const body = await resp.json();\n\n            if (body.ok) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                };\n\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {}\n    };\n};\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken(\n                `events/${event.id}`,\n                event,\n                \"PUT\"\n            );\n            const body = await resp.json();\n\n            if (body.ok) dispatch(eventUpdated(event));\n            else Swal.fire(\"Error\", body.msg, \"error\");\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\");\n            const body = await resp.json();\n\n            if (body.ok) dispatch(eventDeleted());\n            else Swal.fire(\"Error\", body.msg, \"error\");\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted\n});\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken(\"events\");\n            const body = await resp.json();\n\n            const events = prepareEvents(body.eventos);\n            dispatch(eventLoaded(events));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n});\n","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem(\"token\", body.token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(login({ uid: body.uid, name: body.name }));\n        } else Swal.fire(\"Error\", body.msg, \"error\");\n    };\n};\n\nexport const startRegister = (email, password, name) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken(\n            \"auth/new\",\n            { email, password, name },\n            \"POST\"\n        );\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem(\"token\", body.token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(login({ uid: body.uid, name: body.name }));\n        } else Swal.fire(\"Error\", body.msg, \"error\");\n    };\n};\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n        const resp = await fetchConToken(\"auth/renew\");\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem(\"token\", body.token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(login({ uid: body.uid, name: body.name }));\n        } else {\n            dispatch(checkingFinish());\n        }\n    };\n};\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(logOut());\n        dispatch(eventLogout());\n    };\n};\n\nconst logOut = () => ({\n    type: types.authLogout\n});\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    };\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    };\n\n    return [values, handleInputChange, reset];\n};\n","import { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { startLogin, startRegister } from \"../actions/auth\";\nimport { useForm } from \"../hooks/useForm\";\nimport \"./login.css\";\n\nexport const LoginScreen = () => {\n    const dispatch = useDispatch();\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        // lEmail: \"jorge@hotmail.com\",\n        // lPassword: \"123456\"\n        lEmail: \"\",\n        lPassword: \"\"\n    });\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rName: \"\",\n        rEmail: \"\",\n        rPassword: \"\",\n        rPassword2: \"\"\n    });\n\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\n    const { lEmail, lPassword } = formLoginValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(lEmail, lPassword));\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (rPassword !== rPassword2)\n            return Swal.fire(\n                \"Error\",\n                \"Las contrasenas deben de ser iguales\",\n                \"error\"\n            );\n\n        dispatch(startRegister(rEmail, rPassword, rName));\n    };\n\n    return (\n        <div className=\"container login-main-container\">\n            <div className=\"login-container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 login-form-1\">\n                        <h3>Ingreso</h3>\n                        <form onSubmit={handleLogin}>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Correo\"\n                                    name=\"lEmail\"\n                                    value={lEmail}\n                                    onChange={handleLoginInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Contraseña\"\n                                    name=\"lPassword\"\n                                    value={lPassword}\n                                    onChange={handleLoginInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"submit\"\n                                    className=\"btnSubmit\"\n                                    value=\"Login\"\n                                />\n                            </div>\n                        </form>\n                    </div>\n\n                    <div className=\"col-md-6 login-form-2\">\n                        <h3>Registro</h3>\n                        <form>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Nombre\"\n                                    name=\"rName\"\n                                    value={rName}\n                                    onChange={handleRegisterInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"rEmail\"\n                                    value={rEmail}\n                                    onChange={handleRegisterInputChange}\n                                    placeholder=\"Correo\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Contraseña\"\n                                    name=\"rPassword\"\n                                    value={rPassword}\n                                    onChange={handleRegisterInputChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Repita la contraseña\"\n                                    name=\"rPassword2\"\n                                    value={rPassword2}\n                                    onChange={handleRegisterInputChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <input\n                                    onClick={handleRegister}\n                                    type=\"submit\"\n                                    className=\"btnSubmit\"\n                                    value=\"Crear cuenta\"\n                                />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { startLogout } from \"../actions/auth\";\n\nexport const NavBar = () => {\n    const { name } = useSelector((state) => state.auth);\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    };\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">{name}</span>\n\n            <button className=\"btn btn-danger\" onClick={handleLogout}>\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    );\n};\n","export const messages = {\n    allDay: \"Todo el día\",\n    previous: \"<\",\n    next: \">\",\n    today: \"Hoy\",\n    month: \"Mes\",\n    week: \"Semana\",\n    day: \"Día\",\n    agenda: \"Agenda\",\n    date: \"Fecha\",\n    time: \"Hora\",\n    event: \"Evento\",\n    noEventsInRange: \"No hay eventos en este rango\",\n    showMore: (total) => `+ Ver más (${total})`\n};\n","import React from \"react\";\n\nexport const CalendarEvent = ({ event }) => {\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong>{title}</strong>\n            <span>- {user.name}</span>\n        </div>\n    );\n};\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n});\n","import Modal from \"react-modal\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { uiCloseModal } from \"../actions/ui\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport {\n    eventClearActiveEvent,\n    eventStartAddNew,\n    eventStartUpdate\n} from \"../actions/events\";\n\nconst customStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\"\n    }\n};\n\nModal.setAppElement(\"#root\");\n\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\nconst nowPlusOne = now.clone().add(1, \"hours\");\n\nconst initEvent = {\n    title: \"\",\n    notes: \"\",\n    start: now.toDate(),\n    end: nowPlusOne.toDate()\n};\n\nexport const CalendarModal = () => {\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlusOne.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector((state) => state.ui);\n    const { activeEvent } = useSelector((state) => state.calendar);\n\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const { title, notes, start, end } = formValues;\n\n    useEffect(() => {\n        if (activeEvent) setFormValues(activeEvent);\n        else setFormValues(initEvent);\n    }, [activeEvent, setFormValues]);\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    };\n\n    const closeModal = (e) => {\n        dispatch(uiCloseModal());\n        setFormValues(initEvent);\n        dispatch(eventClearActiveEvent());\n    };\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        });\n    };\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        });\n    };\n\n    const handleSubmiteForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd))\n            return Swal.fire(\n                \"Error\",\n                \"La fecha fin debe ser mayor a la fecha de inicio.\",\n                \"error\"\n            );\n\n        if (title.trim().length < 2) return setTitleValid(false);\n\n        if (activeEvent) dispatch(eventStartUpdate(formValues));\n        else dispatch(eventStartAddNew(formValues));\n\n        setTitleValid(true);\n        closeModal();\n    };\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\">\n            <h1> {activeEvent ? \"Editar evento\" : \"Nuevo evento\"} </h1>\n            <hr />\n            <form onSubmit={handleSubmiteForm} className=\"container\">\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        className=\"form-control\"\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        className=\"form-control\"\n                        onChange={handleEndDateChange}\n                        minDate={dateStart}\n                        value={dateEnd}\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${\n                            !titleValid && \"is-invalid\"\n                        }`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        value={title}\n                        onChange={handleInputChange}\n                        autoComplete=\"off\"\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        Una descripción corta\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        value={notes}\n                        onChange={handleInputChange}\n                        name=\"notes\"></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        Información adicional\n                    </small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\">\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n            </form>\n        </Modal>\n    );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiOpenModal } from \"../actions/ui\";\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(uiOpenModal());\n    };\n\n    return (\n        <button onClick={handleClick} className=\"btn btn-primary fab\">\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { eventStartDelete } from \"../actions/events\";\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(eventStartDelete());\n    };\n    return (\n        <button onClick={handleClick} className=\"btn btn-danger fab-danger\">\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento</span>\n        </button>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { NavBar } from \"../ui/NavBar\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { messages } from \"../helpers/calendar-mesages\";\n\nimport \"moment/locale/es\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\nimport { useDispatch } from \"react-redux\";\nimport { uiOpenModal } from \"../actions/ui\";\nimport {\n    eventClearActiveEvent,\n    eventSetActive,\n    eventStartLoading\n} from \"../actions/events\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport { useSelector } from \"react-redux\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\nmoment.locale(\"es\");\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n    const dispatch = useDispatch();\n    const { uid } = useSelector((state) => state.auth);\n    const { events, activeEvent } = useSelector((state) => state.calendar);\n\n    const [lastView, setLastView] = useState(\n        localStorage.getItem(\"lastView\") || \"month\"\n    );\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch]);\n\n    const onDoubleClick = () => {\n        dispatch(uiOpenModal());\n    };\n    const onSelectEvent = (event) => {\n        dispatch(eventSetActive(event));\n    };\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem(\"lastView\", e);\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent());\n    };\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        const style = {\n            backgroundColor: uid === event.user._id ? \"#367cf7\" : \"#465660\",\n            borderRadius: \"0px\",\n            opacity: 0.8,\n            display: \"block\",\n            color: \"white\"\n        };\n\n        return {\n            style\n        };\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <NavBar />\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                view={lastView}\n                selectable={true}\n                onSelectSlot={onSelectSlot}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab />\n            {activeEvent && <DeleteEventFab />}\n            <CalendarModal />\n        </div>\n    );\n};\n","import { Navigate } from \"react-router-dom\";\n\nexport const PrivateRoute = ({ isAuth, children }) => {\n    return isAuth ? children : <Navigate to=\"/login\" />;\n};\n","import { Navigate } from \"react-router-dom\";\n\nexport const PublicRoute = ({ isAuth, children }) => {\n    return isAuth ? <Navigate to=\"/\" /> : children;\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { startChecking } from \"../actions/auth\";\nimport { LoginScreen } from \"../auth/LoginScreen\";\nimport { CalendarScreen } from \"../calendar/CalendarScreen\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector((state) => state.auth);\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if (checking) return <h5>Espere...</h5>;\n\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route\n                    path=\"/login\"\n                    element={\n                        <PublicRoute isAuth={!!uid}>\n                            <LoginScreen />\n                        </PublicRoute>\n                    }\n                />\n                <Route\n                    path=\"/\"\n                    element={\n                        <PrivateRoute isAuth={!!uid}>\n                            <CalendarScreen />\n                        </PrivateRoute>\n                    }\n                />\n                {/* <Route path=\"/login\" element={<LoginScreen />} />\n                <Route path=\"/\" element={<CalendarScreen />} />\n                <Route path=\"*\" element={<Navigate to=\"/\" />} /> */}\n            </Routes>\n        </BrowserRouter>\n    );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true\n    // uid: null,\n    // name: null\n};\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            };\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            };\n        case types.authLogout:\n            return { checking: false };\n        default:\n            return state;\n    }\n};\n","import { types } from \"../types/types\";\n\n// {\n//     id: new Date().getTime(),\n//     title: \"Cumleanos\",\n//     start: moment().toDate(),\n//     end: moment().add(2, \"hours\").toDate(),\n//     notes: \"Comprar pastel\",\n//     user: {\n//         _id: \"123\",\n//         name: \"Jorge\"\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [...state.events, action.payload]\n            };\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            };\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            };\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map((event) =>\n                    event.id === action.payload.id ? action.payload : event\n                )\n            };\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    (event) => event.id !== state.activeEvent.id\n                ),\n                activeEvent: null\n            };\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            };\n        case types.eventLogout:\n            return {\n                ...initialState\n            };\n        default:\n            return state;\n    }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false\n};\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            };\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nexport const rootReducers = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n});\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducers } from \"../reducers/rootReducers\";\n\nconst composeEnhancers =\n    (typeof window !== \"undefined\" &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n    compose;\n\nexport const store = createStore(\n    rootReducers,\n    composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\n\nimport \"./styles.css\";\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}